/* Criando uma Função */
CREATE OR REPLACE FUNCTION
	ATUALIZA_REL()
RETURNS TRIGGER 
AS
	$$
BEGIN
	INSERT INTO
	RELATORIO_LOCADORA
SELECT
	L.IDLOCACAO,
	F.NOME AS FILME,
	G.NOME AS GENERO,
	L.DATA AS DATA,
	L.DIAS AS DIAS,
	L.MIDIA AS MIDIA
FROM
	GENERO G
INNER JOIN
	FILME F
ON
	G.IDGENERO = F.ID_GENERO
INNER JOIN
	LOCACAO L
ON
	L.ID_FILME = F.IDFILME
WHERE
	IDLOCACAO NOT IN (
		SELECT
			IDLOCACAO
		FROM
			RELATORIO_LOCADORA);

COPY
	RELATORIO_LOCADORA
TO
	'Z:\Scripts\RELATORIO_LOCADORA.csv'
DELIMITER
	';'
CSV HEADER;

RETURN NEW;

END;
$$
LANGUAGE PLPGSQL;


/* Apagando uma Trigger */
DROP TRIGGER
	TG_RELATORIO
ON
	LOCACAO;


/* Criando uma Trigger */
CREATE TRIGGER
	TG_RELATORIO
AFTER INSERT ON
	LOCACAO
FOR EACH ROW
	EXECUTE PROCEDURE
		ATUALIZA_REL();


/* Inserindo Dados na Tabela */
INSERT INTO
	LOCACAO
VALUES (NEXTVAL(
	'SEQ_LOCACAO'),
	NOW(),
	100,
	7,
	300
);


INSERT INTO
	LOCACAO
VALUES (NEXTVAL(
	'SEQ_LOCACAO'),
	NOW(),
	500,
	1,
	200
);


INSERT INTO
	LOCACAO
VALUES (NEXTVAL(
	'SEQ_LOCACAO'),
	NOW(),
	800,
	6,
	500
);


/* Sincornizando com Registros Deletados */
CREATE OR REPLACE FUNCTION
	DELETE_LOCACAO()
RETURNS TRIGGER
AS
	$$
BEGIN
	DELETE FROM
		RELATORIO_LOCADORA
	WHERE
		IDLOCACAO = OLD.IDLOCACAO;

COPY
	RELATORIO_LOCADORA
TO
	'Z:\Scripts\RELATORIO_LOCADORA.csv'
DELIMITER
	';'
CSV HEADER;

RETURN OLD;
END
$$
LANGUAGE PLPGSQL;


/* Criando uma Trigger */
CREATE TRIGGER
	DELETE_REG
BEFORE DELETE ON
	LOCACAO
FOR EACH ROW
EXECUTE PROCEDURE
	DELETE_LOCACAO();


/* Apagando um Registro */
DELETE FROM
	LOCACAO
WHERE
	IDLOCACAO = 1;